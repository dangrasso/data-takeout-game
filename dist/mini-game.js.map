{"version":3,"file":"mini-game.js","sourceRoot":"","sources":["../src/mini-game.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html} from 'lit';\nimport {customElement, query, state} from 'lit/decorators.js';\n\nconst enum Direction {\n  u = 'u',\n  r = 'r',\n  d = 'd',\n  l = 'l',\n}\n\nenum CellType {\n  WALL,\n  OPEN,\n}\n\nenum GameScreen {\n  LOADING,\n  START,\n  TUTORIAL,\n  IN_GAME,\n  PAUSE,\n  VICTORY,\n  GAME_OVER,\n}\n\ntype CanvasCoordinates = {x: number; y: number};\ntype GridCoordinates = {x: number; y: number};\ntype DecisionPoint = {\n  cell: Cell;\n  distance: number;\n  direction: Direction;\n};\n\ntype NeighbourCells = {[D in Direction]?: Cell};\n\ntype DistanceTo = {distance: number; to: Cell};\n\ntype Sprite = {\n  image: HTMLImageElement;\n  frames: number;\n  directional: boolean;\n  pauseOnIdle: boolean;\n};\n\nconst orientationToSpriteRow = {\n  [Direction.u]: 0,\n  [Direction.r]: 1,\n  [Direction.d]: 2,\n  [Direction.l]: 3,\n};\n\nconst TICKS_PER_FRAME = 10;\nconst CELL_SIZE = 30;\nconst ASCII_MAZE_LAYOUT = `\n+-------------------+\n|                   |\n| ##### ##### ##### |\n|     # #   # #     |\n| ### # # # # # ### |\n|   #     #     #   |\n|## # # ##### # # ##|\n|     #       #     |\n| # ### ## ## ### # |\n| #   # #   # #   # |\n| ###           ### |\n|     # #   # #     |\n| # ### ## ## ### # |\n| #               # |\n| #### ## # ## #### |\n|       # # #       |\n| # ### # # # ### # |\n| #   #   #   #   # |\n| ### # ##### # ### |\n|                   |\n+-------------------+\n`;\n\nlet _debug = false;\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nfunction debugLog(msg: string, ...args: any[]) {\n  if (_debug) {\n    console.log(msg, ...args);\n  }\n}\n\nfunction makeImage(src: string): HTMLImageElement {\n  const img = new Image();\n  img.src = src;\n  return img;\n}\n\nasync function promiseLoadedImage(src: string): Promise<HTMLImageElement> {\n  return new Promise<HTMLImageElement>((resolve) => {\n    const img = new Image();\n    img.src = src;\n    img.onload = () => resolve(img);\n  });\n}\n\nclass Cell {\n  type: CellType;\n  gridCoordinates: GridCoordinates;\n  size: number;\n  origin: CanvasCoordinates;\n  center: CanvasCoordinates;\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n  neighbours: NeighbourCells = {};\n  allowedDirs: Direction[] = [];\n  nextDecisionPoints: DecisionPoint[] = [];\n  mazeDistanceMap: Map<Cell, number> = new Map();\n\n  constructor(type: CellType, gridCoordinates: GridCoordinates, size: number) {\n    this.type = type;\n    this.gridCoordinates = gridCoordinates;\n    this.size = size;\n\n    this.origin = {\n      x: gridCoordinates.x * this.size,\n      y: gridCoordinates.y * this.size,\n    };\n\n    this.center = {\n      x: (gridCoordinates.x + 0.5) * this.size,\n      y: (gridCoordinates.y + 0.5) * this.size,\n    };\n\n    this.top = this.origin.y;\n    this.right = this.origin.x + this.size;\n    this.bottom = this.origin.y + this.size;\n    this.left = this.origin.x;\n  }\n\n  toString(): string {\n    return `[${this.gridCoordinates.x},${this.gridCoordinates.y}]`;\n  }\n\n  isWall() {\n    return this.type === CellType.WALL;\n  }\n  isOpen() {\n    return this.type === CellType.OPEN;\n  }\n  isFork() {\n    return this.allowedDirs.length > 2;\n  }\n  isDeadEnd() {\n    return this.allowedDirs.length < 2;\n  }\n\n  pixelDistance(destination: Cell | Character) {\n    return Math.sqrt(\n      Math.pow(this.center.x - destination.center.x, 2) +\n        Math.pow(this.center.y - destination.center.y, 2)\n    );\n  }\n\n  straightDistance(destination: Cell) {\n    return Math.sqrt(\n      Math.pow(this.gridCoordinates.x - destination.gridCoordinates.x, 2) +\n        Math.pow(this.gridCoordinates.y - destination.gridCoordinates.y, 2)\n    );\n  }\n\n  manhattanDistance(destination: Cell) {\n    return (\n      Math.abs(this.gridCoordinates.x - destination.gridCoordinates.x) +\n      Math.abs(this.gridCoordinates.y - destination.gridCoordinates.y)\n    );\n  }\n\n  mazeDistance(destination: Cell) {\n    return this.mazeDistanceMap.get(destination) || NaN;\n  }\n\n  get width() {\n    return this.size;\n  }\n  get height() {\n    return this.size;\n  }\n}\n\nclass Maze {\n  width: number;\n  height: number;\n  cellSize: number;\n  cells: Cell[][] = [];\n\n  constructor(layout: string, cellSize: number) {\n    this.cellSize = cellSize;\n    const lines = layout.split('\\n').filter((line) => line);\n    const rowsNum = lines.length;\n    const colsNum =\n      lines.length && lines[0].split('').filter((char) => char).length;\n\n    this.height = rowsNum * this.cellSize;\n    this.width = colsNum * this.cellSize;\n\n    // build grid from layout\n    lines.forEach((line, y) =>\n      line\n        .split('')\n        .filter((char) => char)\n        .forEach((char, x) => {\n          this.cells[x] = this.cells[x] || [];\n          this.cells[x][y] = new Cell(\n            char === ' ' ? CellType.OPEN : CellType.WALL,\n            {x, y},\n            this.cellSize\n          );\n        })\n    );\n\n    // set allowed directions\n    this.forEachCell((cell) => {\n      cell.neighbours = this.getNeighbours(cell.gridCoordinates);\n      if (cell.neighbours.u && cell.neighbours.u.isOpen()) {\n        cell.allowedDirs.push(Direction.u);\n      }\n      if (cell.neighbours.r && cell.neighbours.r.isOpen()) {\n        cell.allowedDirs.push(Direction.r);\n      }\n      if (cell.neighbours.d && cell.neighbours.d.isOpen()) {\n        cell.allowedDirs.push(Direction.d);\n      }\n      if (cell.neighbours.l && cell.neighbours.l.isOpen()) {\n        cell.allowedDirs.push(Direction.l);\n      }\n    });\n\n    // set next decision points\n    this.forEachCell((cell) => {\n      cell.nextDecisionPoints = [];\n      cell.allowedDirs.forEach((dir) => {\n        let scannedDistance = 1;\n        let scannedCell = cell.neighbours[dir];\n        let nextCell = scannedCell?.neighbours[dir];\n\n        // straight to wall or fork\n        while (nextCell?.isOpen()) {\n          if (scannedCell?.isFork()) {\n            break;\n          }\n          scannedDistance += 1;\n          scannedCell = nextCell;\n          nextCell = scannedCell.neighbours[dir];\n        }\n\n        if (!scannedCell || scannedCell.isDeadEnd()) {\n          return;\n        }\n\n        cell.nextDecisionPoints.push({\n          cell: scannedCell,\n          distance: scannedDistance,\n          direction: dir,\n        });\n      });\n    });\n\n    // calculate all maze distances between cells\n    const openCells: Cell[] = [];\n    this.forEachCell((cell) => {\n      if (cell.isOpen()) {\n        openCells.push(cell);\n      }\n    });\n    openCells.forEach((src) => {\n      openCells.forEach((dest) => {\n        if (src === dest) {\n          src.mazeDistanceMap.set(dest, 0);\n          return;\n        }\n\n        const cachedDistance = dest.mazeDistanceMap.get(src);\n        if (cachedDistance) {\n          src.mazeDistanceMap.set(dest, cachedDistance);\n          return;\n        }\n\n        // TODO extract to own function\n        // unknown? crawl to find shortest path (BFS)\n        const queue: DistanceTo[] = [{distance: 0, to: src}];\n        const visited: Cell[] = [];\n        let subpath = queue.shift();\n        let found = false;\n\n        while (subpath) {\n          const target = subpath.to;\n          const distance = subpath.distance;\n\n          // done condition\n          if (target === dest) {\n            src.mazeDistanceMap.set(dest, distance);\n            found = true;\n            break;\n          }\n\n          target.allowedDirs.forEach((dir) => {\n            const neighbour = target.neighbours[dir];\n            if (neighbour && !visited.includes(neighbour)) {\n              queue.push({distance: distance + 1, to: neighbour});\n            }\n          });\n\n          visited.push(target);\n          subpath = queue.shift();\n        }\n\n        if (!found) {\n          src.mazeDistanceMap.set(dest, Infinity);\n        }\n      });\n    });\n  }\n\n  get rows() {\n    return this.height / this.cellSize;\n  }\n\n  get columns() {\n    return this.width / this.cellSize;\n  }\n\n  get centerCell() {\n    return this.getCellAt({x: this.width / 2, y: this.height / 2});\n  }\n\n  getNeighbours(gridCoordinates: GridCoordinates) {\n    const neighbours: NeighbourCells = {};\n    const maxCellX = this.columns - 1;\n    const maxCellY = this.rows - 1;\n\n    if (gridCoordinates.y > 0) {\n      neighbours[Direction.u] = this.cells[gridCoordinates.x][gridCoordinates.y - 1];\n    }\n    if (gridCoordinates.x < maxCellX) {\n      neighbours[Direction.r] = this.cells[gridCoordinates.x + 1][gridCoordinates.y];\n    }\n    if (gridCoordinates.y < maxCellY) {\n      neighbours[Direction.d] = this.cells[gridCoordinates.x][gridCoordinates.y + 1];\n    }\n    if (gridCoordinates.x > 0) {\n      neighbours[Direction.l] = this.cells[gridCoordinates.x - 1][gridCoordinates.y];\n    }\n    return neighbours;\n  }\n\n  getCellAt(canvasCoords: CanvasCoordinates) {\n    return this.cells[Math.floor(canvasCoords.x / this.cellSize)][\n      Math.floor(canvasCoords.y / this.cellSize)\n    ];\n  }\n\n  forEachCell(fn: (c: Cell) => void) {\n    this.cells.forEach((row) => row.forEach((cell) => fn(cell)));\n  }\n}\n\nclass Character {\n  id: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  velX = 0;\n  velY = 0;\n  speed: number;\n  sprite: Sprite;\n  spriteFrameIndex = 0;\n  target?: Cell;\n  targetDir: Direction | null = null;\n  canFly: boolean;\n  private _orientation: Direction = Direction.d;\n\n  constructor(\n    id: string,\n    coords: CanvasCoordinates,\n    sprite: Sprite,\n    speed: number,\n    width: number,\n    height: number,\n    canFly = false\n  ) {\n    this.id = id;\n    this.x = coords.x;\n    this.y = coords.y;\n    this.sprite = sprite;\n    this.width = width;\n    this.height = height;\n    this.speed = speed;\n    this.canFly = canFly;\n  }\n\n  get center(): CanvasCoordinates {\n    return {\n      x: this.x + this.width / 2,\n      y: this.y + this.height / 2,\n    };\n  }\n  set center(coords: CanvasCoordinates) {\n    this.x = coords.x - this.width / 2;\n    this.y = coords.y - this.height / 2;\n  }\n\n  get top(): number {\n    return this.y;\n  }\n  set top(y) {\n    this.y = y;\n  }\n\n  get right(): number {\n    return this.x + this.width;\n  }\n  set right(x) {\n    this.x = x - this.width;\n  }\n\n  get bottom(): number {\n    return this.y + this.height;\n  }\n  set bottom(y) {\n    this.y = y - this.height;\n  }\n\n  get left(): number {\n    return this.x;\n  }\n  set left(x) {\n    this.x = x;\n  }\n\n  isMoving(): boolean {\n    return !!this.velX || !!this.velY;\n  }\n\n  /**\n   * Note: in case of perfect diagonal movement, this will pick the horizontal component\n   * @returns {Direction}\n   */\n  get movingDirection(): Direction | null {\n    if (!this.isMoving()) {\n      return null;\n    }\n    if (Math.abs(this.velY) > Math.abs(this.velX)) {\n      return this.velY > 0 ? Direction.d : Direction.u;\n    } else {\n      return this.velX > 0 ? Direction.r : Direction.l;\n    }\n  }\n\n  collidesWith(other: Character | Cell) {\n    return (\n      Math.abs(this.center.x - other.center.x) < (this.width + other.width) / 2 &&\n      Math.abs(this.center.y - other.center.y) < (this.height + other.height) / 2\n    );\n  }\n\n  move(dir: Direction, speed: number = this.speed) {\n    this.velX = dir === Direction.l ? -speed : dir === Direction.r ? speed : 0;\n    this.velY = dir === Direction.u ? -speed : dir === Direction.d ? speed : 0;\n  }\n\n  get orientation() {\n    this._orientation = this.movingDirection || this._orientation;\n    return this._orientation;\n  }\n}\n\nclass Game {\n  maze!: Maze;\n  player!: Character;\n  preys: Character[] = [];\n  hunters: Character[] = [];\n  totalPreys = 0;\n  gamesPlayed = 0;\n\n  // internal\n  private canvas: HTMLCanvasElement;\n  private ctx!: CanvasRenderingContext2D;\n  private _screen?: GameScreen;\n  private keys: boolean[] = [];\n\n  // images\n  private startScreenImg!: HTMLImageElement;\n  private tutorialScreenImg!: HTMLImageElement;\n  private pauseScreenImg!: HTMLImageElement;\n  private gameOverScreenImg!: HTMLImageElement;\n  private victoryScreenImg!: HTMLImageElement;\n  // TODO: also preload character sprites\n\n  // hooks\n  private onTick: (points: number, totalPoints: number, elapsedSeconds: number) => void;\n\n  // game loop controls\n  private initialized = false;\n  private looping = true;\n  private nextAnimationFrameRequest!: number;\n  private tickSinceLastFrame!: number;\n  private frameIndex!: number;\n  private startedSince: number | null = null;\n  private pausedSince: number | null = null;\n  private overSince: number | null = null;\n  private durationPaused = 0;\n\n  constructor(canvas: HTMLCanvasElement, onTick: (points: number, totalPoints: number, elapsedSeconds: number) => void) {\n    this.onTick = onTick;\n    this.canvas = canvas;\n  }\n\n  get playTime() {\n    if (!this.startedSince) {\n      return 0;\n    }\n\n    return (\n      (this.overSince || this.pausedSince || Date.now()) - this.startedSince - this.durationPaused\n    );\n  }\n\n  get screen(): GameScreen {\n    return this._screen || GameScreen.LOADING;\n  }\n  set screen(newScreen: GameScreen) {\n    if (newScreen === this.screen) {\n      return; // do nothing if it didn't change\n    }\n    this._screen = newScreen;\n\n    if ([GameScreen.LOADING, GameScreen.IN_GAME].includes(newScreen)) {\n      return;\n    } else if (newScreen === GameScreen.START) {\n      this.ctx.drawImage(this.startScreenImg, 0, 0, this.maze.width, this.maze.height);\n    } else if (newScreen === GameScreen.TUTORIAL) {\n      this.ctx.drawImage(this.tutorialScreenImg, 0, 0, this.maze.width, this.maze.height);\n    } else if (newScreen === GameScreen.PAUSE) {\n      this.ctx.drawImage(this.pauseScreenImg, 0, 0, this.maze.width, this.maze.height);\n    } else if (newScreen === GameScreen.GAME_OVER) {\n      this.ctx.drawImage(this.gameOverScreenImg, 0, 0, this.maze.width, this.maze.height);\n    } else if (newScreen === GameScreen.VICTORY) {\n      this.ctx.drawImage(this.victoryScreenImg, 0, 0, this.maze.width, this.maze.height);\n    }\n  }\n\n  async init() {\n    this.maze = new Maze(ASCII_MAZE_LAYOUT, CELL_SIZE);\n    this.keys = [];\n    this.canvas.width = this.maze.width;\n    this.canvas.height = this.maze.height;\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\n\n    document.body.addEventListener('keydown', (e) => {\n      if (e.repeat) {\n        return;\n      }\n      if (\n        ['ArrowUp', 'ArrowRight', 'ArrowDown', 'ArrowLeft', 'w', 'a', 's', 'd'].indexOf(e.key) > -1\n      ) {\n        this.keys[e.keyCode] = true;\n      }\n      // DEBUG (m)ode => activate\n      if (e.key === 'm') {\n        _debug = true;\n        console.log('DEBUG (m)ode: on');\n        debugLog(\"Logger: that's right!\");\n      }\n    });\n\n    document.body.addEventListener('keyup', (e) => {\n      this.keys[e.keyCode] = false;\n      if (e.key === 'p') {\n        this.togglePausedScreen();\n      }\n      if (e.key === 'r') {\n        this.restart();\n      }\n      if (e.key === ' ') {\n        this.nextScreen();\n      }\n      if (e.key === 'v') {\n        this.gameWon();\n      }\n\n      // DEBUG (m)ode => deactivate\n      if (e.key === 'm') {\n        _debug = false;\n        console.log('DEBUG (m)ode: off');\n      }\n      // DEBUG print full game status\n      if (e.key === 'g') {\n        console.log('==========GAME STATUS==========', this);\n      }\n    });\n\n    // Preload all images for smoother transitions\n    Promise.all([\n      promiseLoadedImage('/img/screens/screen-start.png'),\n      promiseLoadedImage('/img/screens/screen-tutorial.png'),\n      promiseLoadedImage('/img/screens/screen-pause.png'),\n      promiseLoadedImage('/img/screens/screen-game-over.png'),\n      promiseLoadedImage('/img/screens/screen-victory.png'),\n    ]).then(([startImg, tutorialImg, pauseImg, gameOverImg, victoryImg]) => {\n      this.startScreenImg = startImg;\n      this.tutorialScreenImg = tutorialImg;\n      this.pauseScreenImg = pauseImg;\n      this.gameOverScreenImg = gameOverImg;\n      this.victoryScreenImg = victoryImg;\n      this.screen = GameScreen.START;\n    });\n\n    this.initialized = true;\n  }\n\n  nextScreen() {\n    if (this.screen === GameScreen.START) {\n      this.screen = GameScreen.TUTORIAL;\n    } else if (this.screen === GameScreen.TUTORIAL) {\n      this.start();\n    } else if ([GameScreen.GAME_OVER, GameScreen.VICTORY].includes(this.screen)) {\n      this.restart();\n    }\n  }\n\n  start() {\n    if (!this.initialized) {\n      this.init();\n    }\n    this.screen = GameScreen.IN_GAME;\n    this.gamesPlayed += 1;\n    this.tickSinceLastFrame = 0;\n    this.frameIndex = 0;\n\n    const playerSpriteImg = makeImage('/img/sprites/privacy_dev_walking.png');\n    const playerSprite: Sprite = {\n      image: playerSpriteImg,\n      frames: 4,\n      directional: true,\n      pauseOnIdle: true,\n    };\n    this.player = new Character(\n      `g${this.gamesPlayed}-player`,\n      this.maze.centerCell.origin,\n      playerSprite,\n      3,\n      15,\n      30\n    );\n\n    const preySpriteImg = makeImage('/img/sprites/data.png');\n    const preySprite: Sprite = {\n      image: preySpriteImg,\n      frames: 7,\n      directional: false,\n      pauseOnIdle: false,\n    };\n    const preySize = this.maze.cellSize;\n\n    const startingPositions = Array.from(this.maze.centerCell.mazeDistanceMap)\n      .filter(([, distance]) => distance > 3)\n      .map(([cell]) => cell);\n\n    this.totalPreys = 12;\n    this.preys = [];\n    for (let i = 0; i < this.totalPreys; i++) {\n      this.preys.push(\n        new Character(\n          `g${this.gamesPlayed}-prey-${i}`,\n          startingPositions[Math.floor(Math.random() * startingPositions.length)].origin,\n          preySprite,\n          3,\n          preySize,\n          preySize\n        )\n      );\n    }\n\n    const hunterSpriteImg = makeImage('/img/sprites/authority.png');\n    const hunterSprite: Sprite = {\n      image: hunterSpriteImg,\n      frames: 4,\n      directional: true,\n      pauseOnIdle: false,\n    };\n    const hunterSize = this.maze.cellSize * 2;\n\n    this.hunters = [];\n    for (let i = 0; i < 2; i++) {\n      this.hunters.push(\n        new Character(\n          `g${this.gamesPlayed}-hunter-${i}`,\n          startingPositions[Math.floor(Math.random() * startingPositions.length)].origin,\n          hunterSprite,\n          0.5,\n          hunterSize,\n          hunterSize,\n          true\n        )\n      );\n    }\n\n    this.startedSince = Date.now();\n    this.overSince = null;\n    this.pausedSince = null;\n    this.looping = true;\n    this.durationPaused = 0;\n\n    this.tick();\n  }\n\n  preventNextTick() {\n    if (this.nextAnimationFrameRequest) {\n      cancelAnimationFrame(this.nextAnimationFrameRequest);\n    }\n  }\n\n  restart() {\n    if (\n      ![\n        GameScreen.IN_GAME,\n        GameScreen.PAUSE,\n        GameScreen.GAME_OVER,\n        GameScreen.VICTORY,\n      ].includes(this.screen)\n    ) {\n      return;\n    }\n    this.preventNextTick();\n    this.start();\n  }\n\n  togglePausedScreen() {\n    if (this.screen === GameScreen.IN_GAME) {\n      this.screen = GameScreen.PAUSE;\n      this.looping = false;\n      this.preventNextTick();\n      this.pausedSince = Date.now();\n    } else if (this.screen === GameScreen.PAUSE) {\n      if (this.pausedSince) {\n        this.durationPaused += Date.now() - this.pausedSince;\n      }\n      this.screen = GameScreen.IN_GAME;\n      this.looping = true;\n      this.pausedSince = null;\n      this.tick();\n    }\n  }\n\n  gameWon() {\n    this.looping = false;\n    this.overSince = Date.now();\n    this.screen = GameScreen.VICTORY;\n    this.preventNextTick();\n  }\n\n  gameLost() {\n    this.looping = false;\n    this.overSince = Date.now();\n    this.screen = GameScreen.GAME_OVER;\n    this.preventNextTick();\n  }\n\n  private tick() {\n    if (!this.looping) {\n      return;\n    }\n    this.nextAnimationFrameRequest = requestAnimationFrame(() => this.tick());\n\n    this.tickSinceLastFrame += 1;\n    if (this.tickSinceLastFrame > TICKS_PER_FRAME) {\n      this.tickSinceLastFrame = 0;\n      this.frameIndex += 1;\n    }\n\n    // Set player velocity\n    this.setPlayerIntent(this.player);\n    this.applyFriction(this.player);\n\n    // Move preys\n    this.preys.forEach(prey => {\n      this.setPreyIntent(prey, this.player, this.maze);\n      // this.applyFriction(prey);\n      this.updatePosition(prey, this.maze);\n    });\n\n    // Move hunters\n    this.hunters.forEach((hunter) => {\n      this.setHunterIntent(hunter, this.player, this.maze);\n      // this.applyFriction(hunter);\n      this.updatePosition(hunter, this.maze);\n    });\n\n    // Move player\n    this.updatePosition(this.player, this.maze);\n\n    // Check for prey caught\n    this.preys = this.preys.filter((prey) => !prey.collidesWith(this.player)); // adieu!\n\n    // Draw current game frame\n    this.draw(this.ctx, this.maze, this.player, this.preys, this.hunters);\n\n    // Check for end game\n    if (!this.preys.length) {\n      this.gameWon();\n    } else if (this.hunters.some((hunter) => hunter.collidesWith(this.player))) {\n      this.gameLost();\n    }\n\n    // call hooks\n    if (typeof this.onTick === 'function') {\n      this.onTick.call(\n        null,\n        this.totalPreys - this.preys.length,\n        this.totalPreys,\n        Math.floor(this.playTime / 1000)\n      );\n    }\n  }\n\n  private wallColor(): string {\n    return _debug ? 'gray' : '#b31d25';\n  }\n\n  private floorColor(): string {\n    return _debug ? 'white' : '#f8ca35';\n  }\n\n  private draw(\n    ctx: CanvasRenderingContext2D,\n    maze: Maze,\n    player: Character,\n    preys: Character[],\n    hunters: Character[]\n  ) {\n    ctx.clearRect(0, 0, maze.width, maze.height);\n\n    // draw floor\n    ctx.fillStyle = this.floorColor();\n    ctx.fillRect(0, 0, maze.width, maze.height);\n    const currentCell = maze.getCellAt(player.center);\n\n    if (_debug) {\n      // DEBUG: print next decision points from player\n      ctx.fillStyle = 'darkorange';\n      currentCell.nextDecisionPoints.forEach(decisionPoint => {\n        ctx.fillRect(decisionPoint.cell.origin.x, decisionPoint.cell.origin.y, maze.cellSize, maze.cellSize);\n      });\n    }\n\n    // draw walls\n    ctx.fillStyle = this.wallColor();\n    maze.forEachCell((cell) => {\n      if (cell.isWall()) {\n        ctx.fillRect(cell.origin.x, cell.origin.y, maze.cellSize, maze.cellSize);\n      }\n\n      if (_debug) {\n        // DEBUG: print maze distance from player\n        if (cell.isOpen()) {\n          ctx.fillText(\n            Math.floor(cell.mazeDistance(currentCell)).toString(),\n            cell.origin.x,\n            cell.center.y,\n            cell.width\n          );\n        }\n      }\n    });\n\n    if (_debug) {\n      // DEBUG: draw player neighbouring cells\n      Object.values(currentCell.neighbours).forEach(n => {\n        ctx.strokeStyle = n.isWall() ? 'red' : 'lime';\n        ctx.strokeRect(n.origin.x, n.origin.y, maze.cellSize, maze.cellSize);\n      });\n\n      // DEBUG: draw player cell\n      ctx.strokeStyle = 'orange';\n      ctx.strokeRect(currentCell.origin.x, currentCell.origin.y, maze.cellSize, maze.cellSize);\n\n      // DEBUG: draw player bounding box\n      ctx.strokeStyle = 'blue';\n      ctx.strokeRect(player.x, player.y, player.width, player.height);\n    }\n\n    // draw sprites\n    [player].concat(preys, hunters).forEach((character: Character) => {\n      if (!character.sprite.pauseOnIdle || character.isMoving()) {\n        character.spriteFrameIndex = this.frameIndex % character.sprite.frames;\n      }\n\n      const frameW = character.sprite.image.naturalWidth / character.sprite.frames;\n      const frameH = character.sprite.directional\n        ? character.sprite.image.naturalHeight / 4\n        : character.sprite.image.naturalHeight;\n\n      ctx.drawImage(\n        character.sprite.image,\n        frameW * character.spriteFrameIndex,\n        !character.sprite.directional ? 0 : frameH * orientationToSpriteRow[character.orientation],\n        frameW,\n        frameH,\n        character.center.x - frameW / 2,\n        character.bottom - frameH,\n        frameW,\n        frameH\n      );\n\n      if (_debug) {\n        // DEBUG draw character id\n        ctx.strokeStyle = 'red';\n        ctx.strokeText(character.id, character.left, character.top - 5);\n\n        // DEBUG draw character distance from target\n        if (character.target) {\n          // ctx.strokeStyle = 'gray';\n          // ctx.strokeText(`${Math.floor(character.target.pixelDistance(character))}` , character.right + 2, character.center.y, character.width);\n          ctx.strokeStyle = 'gold';\n          ctx.beginPath();\n          ctx.moveTo(character.center.x, character.center.y);\n          ctx.lineTo(character.target.center.x, character.target.center.y);\n          ctx.stroke();\n        }\n      }\n    });\n  }\n\n  /**\n   * Checks collisions and sets new position and velocity accordingly\n   * @param {Character} character\n   * @param {Maze} maze\n   */\n  private updatePosition(character: Character, maze: Maze) {\n    if (!character.isMoving() || !character.movingDirection) {\n      return;\n    }\n    const previousCell = maze.getCellAt(character.center);\n    character.x += character.velX;\n    character.y += character.velY;\n\n    if (character.canFly) {\n      return;\n    }\n\n    const movingDirection = character.movingDirection;\n\n    // if new cell is wall, block movement and bring back on the main axis\n    if (maze.getCellAt(character.center).isWall()) {\n      if (movingDirection === Direction.u) {\n        character.top = previousCell.top;\n        character.velY = 0;\n      } else if (movingDirection === Direction.r) {\n        character.right = previousCell.right;\n        character.velX = 0;\n      } else if (movingDirection === Direction.d) {\n        character.bottom = previousCell.bottom;\n        character.velY = 0;\n      } else if (movingDirection === Direction.l) {\n        character.left = previousCell.left;\n        character.velX = 0;\n      }\n    }\n\n    // even if not wall, if new position crosses a wall on any of the axes, align character\n    const expectedCell = maze.getCellAt(character.center);\n    Object.keys(expectedCell.neighbours)\n      .map((dirStr) => dirStr as Direction)\n      .filter((dir) => {\n        const neighbour = expectedCell.neighbours[dir];\n        return (\n          !neighbour ||\n          (neighbour.isWall() && character.collidesWith(neighbour))\n        );\n      })\n      .forEach((dir) => {\n        // -->| frontal intersection\n        if (dir === movingDirection.toString()) {\n          if (dir === Direction.u) {\n            character.top = expectedCell.top;\n            character.velY = 0;\n          } else if (dir === Direction.r) {\n            character.right = expectedCell.right;\n            character.velX = 0;\n          } else if (dir === Direction.d) {\n            character.bottom = expectedCell.bottom;\n            character.velY = 0;\n          } else if (dir === Direction.l) {\n            character.left = expectedCell.left;\n            character.velX = 0;\n          }\n        }\n        // -->= side intersection\n        if (dir === Direction.u && [Direction.l, Direction.r].indexOf(movingDirection) > -1) {\n          character.top = expectedCell.top;\n          character.velY = 0;\n        }\n        if (dir === Direction.d && [Direction.l, Direction.r].indexOf(movingDirection) > -1) {\n          character.bottom = expectedCell.bottom;\n          character.velY = 0;\n        }\n        if (dir === Direction.r && [Direction.u, Direction.d].indexOf(movingDirection) > -1) {\n          character.right = expectedCell.right;\n          character.velX = 0;\n        }\n        if (dir === Direction.l && [Direction.u, Direction.d].indexOf(movingDirection) > -1) {\n          character.left = expectedCell.left;\n          character.velX = 0;\n        }\n      });\n  }\n\n  private applyFriction(character: Character, friction = 0.8, minSpeed = 0.1) {\n    character.velX *= friction;\n    character.velY *= friction;\n    // stop if very slow\n    if (Math.abs(character.velX) < minSpeed) {\n      character.velX = 0;\n    }\n    if (Math.abs(character.velY) < minSpeed) {\n      character.velY = 0;\n    }\n  }\n\n  private setPlayerIntent(player: Character) {\n    if (this.keys[38] || (this.keys[87] && player.velY > -player.speed)) {\n      player.velY--;\n    } // UP\n    if (this.keys[40] || (this.keys[83] && player.velY < player.speed)) {\n      player.velY++;\n    } // DOWN\n    if (this.keys[39] || (this.keys[68] && player.velX < player.speed)) {\n      player.velX++;\n    } // RIGHT\n    if (this.keys[37] || (this.keys[65] && player.velX > -player.speed)) {\n      player.velX--;\n    } // LEFT\n  }\n\n  private setPreyIntent(prey: Character, player: Character, maze: Maze) {\n    const preyCell = maze.getCellAt(prey.center);\n    const playerCell = maze.getCellAt(player.center);\n    const distanceFromPlayer = preyCell.straightDistance(playerCell);\n\n    const reactivity = 0.02;\n    const minDistance = 3;\n    const percentScared =\n      0.1 *\n      Math.ceil(10 / (reactivity * Math.pow(Math.max(0, distanceFromPlayer - minDistance), 2) + 1));\n\n    this.fleeSmartlyFrom(prey, playerCell, maze, percentScared * prey.speed);\n  }\n\n  private setHunterIntent(hunter: Character, player: Character, maze: Maze) {\n    const playerCell = maze.getCellAt(player.center);\n    hunter.target = playerCell;\n    this.goStraightTowards(hunter, hunter.target, hunter.speed);\n  }\n\n  private fleeSmartlyFrom(character: Character, from: Cell, maze: Maze, speed: number) {\n    const characterCell = maze.getCellAt(character.center);\n    const reachedTarget =\n      character.target === characterCell &&\n      character.target.pixelDistance(character) < character.speed;\n\n    if (character.target && !reachedTarget) {\n      debugLog(`${character.id} At ${characterCell}, WAITING to reach target, going ${character.targetDir}`);\n    } else {\n      // choose next target\n      const possibleTargets: Array<{ dir: Direction | null; cell: Cell; profit: number }> = [];\n      characterCell.nextDecisionPoints.forEach((dp) => {\n        const profit = dp.cell.mazeDistance(from) - dp.distance;\n        if (profit >= 0) {\n          possibleTargets.push({dir: dp.direction, cell: dp.cell, profit});\n        }\n      });\n      possibleTargets.push({\n        dir: null,\n        cell: characterCell,\n        profit: characterCell.mazeDistance(from),\n      });\n\n      possibleTargets.sort((a, b) => b.profit - a.profit);\n      let chosenTarget;\n\n      if (possibleTargets[0].dir === null) {\n        // if the best choice is not to move, don't move\n        chosenTarget = possibleTargets[0];\n        debugLog(\n          `${character.id} At ${characterCell}, opt chosen: STAY(null) for ${chosenTarget.profit}, choices:`,\n          possibleTargets.map((t) => `${t.dir} -> ${t.cell} for ${t.profit}`)\n        );\n      } else {\n        const randomisedChoice =\n          Math.random() > 0.7 ? Math.floor(Math.random() * possibleTargets.length) : 0;\n        chosenTarget = possibleTargets[randomisedChoice];\n        debugLog(`${character.id} At ${characterCell}, ${randomisedChoice === 0 ? 'opt' : `subopt(${randomisedChoice})`} chosen: ${chosenTarget.dir} -> ${chosenTarget.cell} for ${chosenTarget.profit}, choices:`, possibleTargets.map(t => `${t.dir} -> ${t.cell} for ${t.profit}`));\n      }\n\n      character.target = chosenTarget.cell;\n      character.targetDir = chosenTarget.dir;\n    }\n    this.goStraightTowards(character, character.target, speed);\n  }\n\n  private goStraightTowards(character: Character, target: Cell, speed: number) {\n    const dx = target.center.x - character.center.x;\n    const dy = target.center.y - character.center.y;\n    const norm = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n    character.velX = (dx * speed) / norm;\n    character.velY = (dy * speed) / norm;\n  }\n}\n\n@customElement('mini-game')\nexport class MiniGame extends LitElement {\n  @query('#game')\n  $canvas!: HTMLCanvasElement;\n\n  @state()\n  gameDays = 0;\n  @state()\n  points = 0;\n  @state()\n  targetPoints = 0;\n\n  override render() {\n    return html`\n      <canvas id='game' style='border: 1px solid #000; max-width: 100%; max-height: 100%;'></canvas>\n      <div id='score' style='position: fixed; bottom: 0; padding: .5rem; background: #ffffff80'>\n        <strong>Data gathered: </strong>\n        <code id='score-points'>${this.points} / ${this.targetPoints}</code>\n        <span> - </span>\n        <strong>Days: </strong>\n        <code id='score-time' style='color: ${this._daysToColor(this.gameDays)}; font-size: ${this._daysToFontSize(this.gameDays)}'>\n          ${this.gameDays}\n        </code>\n      </div>\n    `;\n  }\n\n  private _daysToColor(days: number) {\n    return (\n      days < 15 ? 'green' : \n      days < 30 ? 'darkorange' : \n      'red'\n    );\n  }\n\n  private _daysToFontSize(days: number) {\n    const sizeInPx = Math.max(10, Math.min(200, days));\n    return `${sizeInPx}px`;\n  }\n\n  override firstUpdated(): void {\n    const ontick = (points: number, targetPoints: number, elapsedSeconds: number) => {\n      this.gameDays = Math.floor(elapsedSeconds);\n      this.points = points;\n      this.targetPoints = targetPoints;\n    };\n    const takeoutGame = new Game(this.$canvas, ontick);\n    takeoutGame.init();\n  }\n}\n"]}